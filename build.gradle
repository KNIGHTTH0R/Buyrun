// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
        classpath 'com.google.gms:google-services:4.0.1'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven { url "https://jitpack.io" }
    }



    project.ext {
        compileSdkVersion = 27
        minSdkVersion = 21
        targetSdkVersion = 27
        buildToolsVersion = '27.0.3'
        supportLibraryVersion = "27.1.1"
        lifecycleVersion = "1.1.1"
        daggerVersion="2.15"

        rxJavaVersion = "2.1.16"
        rxandroidVersion = "2.0.2"

        //Firebase
        firebaseAuthVersion="16.0.1"
        firebaseDbVersion="16.0.1"
        firebaseStorageVersion="16.0.1"
        firebaseUIAuthVersion = "4.1.0"

        //play services
        authServicesVersion = "15.0.1"
        locationServicesVersion = "15.0.1"
        mapServicesVersion = "15.0.1"

        //test
        testRunnerVersion = "1.0.2"
        espressoVersion = "3.0.2"

        //RxPermissions
        rxPermissionsVersion = "0.10.2"

        //RxFirebase
        rxFirebaseVersion = "1.5.0"

        //rxLocationVersion
        rxLocationVersion = "1.0.5"

        //RxRelay
        rxRelayVersion = "2.0.0"

        //Guava
        guavaVersion = "26.0-android"

        //Picasso
        picassoVersion = "2.71828"
    }
}

subprojects {
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
